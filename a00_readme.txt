

TODO 


## 添加好友时 , 把家长也添加了进去
暂时不在<服务端>处理 , 在<客户端>把家长提出来
在<下一版本>再对此进行优化

## <好友>更新后 , 没有 <FT>来标识
无法立即更新到<客户端> 
初步构思解决方案: 把<好友>的记录保存在<家庭>
<家庭>有<FT>
在<下一版本>再进行优化

## <好友>返回数据 , 把整个<user>都返回
影响效率
把<好友>数据和<user>数据分开不同的<JSON>项

===================== 2018-08-26 10:31:31

# 邀请 家长 ( 或 添加家长 )
用 <邀请码>

家长<注册>时 , 如果已有<家庭>
那么可以输入<邀请码> , 参加到自己的<家庭>

家长<注册> , 新建家庭就不用录入<邀请码>


# 邀请 <好友> 
用 <邀请码> 

邀请好友时 , 一方申请<邀请码> ,
发送<邀请码>到对方<家庭>
对方通过<加入好友> , 
输入<邀请码> 就可以完成<好友.添加>


===================== 2018-08-22 19:37:28

还是保留<好友>

用 <JID><UID>( 好友ID ) 来记录

添加好友时 , 把对方全部<孩子>都添加
对方也全部添加,我家的全部<孩子>
如果要删除<好友> , 可以一个一个删除
但对方家的<好友>不会有变化 .
意思就是 : 只能删除自己家的好友关系 .




===================== 2018-08-20 17:49:10

取消<好友> :

还是要取消<好友>
用<邻居>代替

因为账户都是<家长>的 , 
<孩子>没有账号 , <好友>之间的操作由<家长>完成

那么<好友>添加还好办 , 直接操作<UID>就好了
但是,如果是<好友.删除> 就比较麻烦 
例如 : 两个家庭A和B , 分别有孩子1,2 和 3,4
他们互相为好友 , 
当<家庭A>要删除<好友.孩子3>
那么对方<家庭B>是否要删除<好友.孩子1><好友.孩子2>
如果对方还保留着<家庭B.好友>的信息,就不合适了
如果<家庭B.好友>都删除 , 那么<家庭A>也不能只删除
<好友3>




===================== 2018-08-19 20:08:29

<好友>
原来时 JID1 和 JID2
 改为 JID 和 UID
 // 意思是 <家庭.JID> 包含的 <好友.UID>


===================== 开始编写tb( 时间银行 )

2018-06-11 17:11:55
取消<好友>, 改为<邻居>

2018-06-08 23:24:04

修改SYS::参数检查_end
参考 客户端 JS 的做法


===================== 返回数据策略调整
2018-05-17 17:31:01
修改<返回数据>的策略
1 . 登陆时 , 客户端没有数据 ,需要全部返回
2 . JID 变更时 , 不需要再返回 <project> 和 
<pro_user> 列表  , 
当然 , 如果发生了修改 , 也是要返回的
3 . <pro_user> 的 <BUF>需要有序的保存起来 ,
因为他会部分更新到<客户端>

4 . 取消 JID_LT  , 改用 <标记.换了项目>



===================== 第三次修改



2018-05-04 10:23:34

修改 cla_pro_user.php
public function set_role($分组, $role)
根据 <数据库>结构修改 一个记录项 只记录一个<分组>的数据
删除数据 . 直接del
修改 数据 . 直接update
删除数据后, 不用判断 user是否还在 project里面

修改 getObj(...)

2018-04-28 08:57:26

TODO
pro_user 把 <分组> 从 <JSON>里面移出来
行成索引<JID><分组><UID>

TODO
增加 <分组>索引
1.监理
2.甲方
3.施工
4.临时


============================================

2018-04-24 16:05:41

TODO 
当一个user 不属于任何<项目.分组>
set_seesion 需要特别处理
<OK> 如果没有项目 , 立即返回_end
提示 <需要重新接收邀请>


TODO
如果 user 当前所在项目A , 
被 管理员 刚出了<项目A> .
user 的 <当前项目> 需要 即使调整



TODO
返回 user_my 的时候
如果 user_my 变化后( FT 变化 )
也立即返回
<OK> 调整了 fixed()

2018-04-21 12:42:35

TODO 
user数据里面 需要包含 所在项目 , 分组 , 分组内权限的信息
客户端 变更当前<项目.分组>时 , 需要用到

TODO
建立pro_user
记录 每一个 project 里面 user 的 资料




============================================
2018-04-17 01:42:39
调试完成

2018-04-12 00:58:14
准备删除全部 class 的 getByID()
统一写在 一个 abstract class 里面


2018-04-10 14:57:54

<user> 里面需要保留<项目>数据
因为<项目>之间切换 , 不可能逐个<项目>去判断


2018-04-08 15:41:17

修改：
在“项目”数据里面添加“用户名”数据
返回“项目”数据就直接含有“用户名”数据
不用再根据<项目内UID>去返回<用户名>




